{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Projekte/Web-Dev/TechLabs/100-DIB/ss23-drop-in-to-berlin/dib/src/context/RestaurantContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantContext = /*#__PURE__*/createContext();\nfunction RestProvider({\n  children\n}) {\n  _s();\n  const [selectedRestaurant, setSelectedRestaurant] = useState();\n  const fetchRestaurants = useCallback(async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/restaurants');\n      console.log(res);\n      setRestaurants(res.data);\n      setDataFetched(true);\n    } catch (error) {\n      console.error('Error fetching restaurants:', error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchRestaurants();\n  }, [fetchRestaurants]);\n\n  //usecallback stellt sicher, dass die funktion nicht mit jedem rerender neu zugeordnet wird.\n\n  const valuesToShare = {\n    restaurants,\n    dataFetched\n  };\n  return /*#__PURE__*/_jsxDEV(RestaurantContext.Provider, {\n    value: valuesToShare,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(RestProvider, \"HRI/YJ1WKiRudDDc8IyzknmrhFg=\");\n_c = RestProvider;\nexport { RestProvider };\nexport default RestaurantContext;\nvar _c;\n$RefreshReg$(_c, \"RestProvider\");","map":{"version":3,"names":["createContext","useState","axios","jsxDEV","_jsxDEV","RestaurantContext","RestProvider","children","_s","selectedRestaurant","setSelectedRestaurant","fetchRestaurants","useCallback","res","get","console","log","setRestaurants","data","setDataFetched","error","useEffect","valuesToShare","restaurants","dataFetched","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/felix/Projekte/Web-Dev/TechLabs/100-DIB/ss23-drop-in-to-berlin/dib/src/context/RestaurantContext.js"],"sourcesContent":["import { createContext, useState } from 'react';\nimport axios from 'axios';\n\nconst RestaurantContext = createContext();\n\nfunction RestProvider({ children }) {\n\n  const [selectedRestaurant, setSelectedRestaurant] = useState();\n\n\n  const fetchRestaurants = useCallback(async() => {\n    try{\n    const res = await axios.get ('http://localhost:3001/restaurants')\n    console.log(res)\n    setRestaurants(res.data);\n    setDataFetched(true)\n    } catch (error) {\n      console.error('Error fetching restaurants:', error);\n  }},[])\n\n    \n    useEffect(() => {\n    fetchRestaurants();\n  }, [fetchRestaurants]);\n\n\n  //usecallback stellt sicher, dass die funktion nicht mit jedem rerender neu zugeordnet wird.\n\n\n  const valuesToShare = {\n    restaurants,\n    dataFetched\n  }\n\n  return (\n    <RestaurantContext.Provider value={valuesToShare}>\n      {children}\n    </RestaurantContext.Provider>\n  );\n}\n\nexport { RestProvider };\nexport default RestaurantContext;\n\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC,CAAC;AAEzC,SAASM,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAElC,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAG9D,MAAMU,gBAAgB,GAAGC,WAAW,CAAC,YAAW;IAC9C,IAAG;MACH,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,mCAAmC,CAAC;MACjEC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChBI,cAAc,CAACJ,GAAG,CAACK,IAAI,CAAC;MACxBC,cAAc,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EAAC,CAAC,EAAC,EAAE,CAAC;EAGJC,SAAS,CAAC,MAAM;IAChBV,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;;EAGtB;;EAGA,MAAMW,aAAa,GAAG;IACpBC,WAAW;IACXC;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,iBAAiB,CAACoB,QAAQ;IAACC,KAAK,EAAEJ,aAAc;IAAAf,QAAA,EAC9CA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC;AAACtB,EAAA,CAlCQF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAoCrB,SAASA,YAAY;AACrB,eAAeD,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}