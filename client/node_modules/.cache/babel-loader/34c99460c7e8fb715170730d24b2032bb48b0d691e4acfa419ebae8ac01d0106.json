{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Projekte/Web-Dev/TechLabs/100-DIB/ss23-drop-in-to-berlin/dib/src/context/RestContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestContext = /*#__PURE__*/createContext();\nfunction RestProvider({\n  children\n}) {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [displayedRestaurants, setDisplayedRestaurants] = useState([]);\n  useEffect(() => {\n    fetch('/database.json').then(response => response.json()).then(data => {\n      setRestaurants(data);\n      const shuffled = data.sort(() => 0.5 - Math.random());\n      setDisplayedRestaurants(shuffled.slice(0, 8));\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RestContext.Provider, {\n    value: {\n      restaurants,\n      displayedRestaurants,\n      setDisplayedRestaurants\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(RestProvider, \"t45NYZWYvIkH4tpJEENWKJRD0J8=\");\n_c = RestProvider;\nexport { RestContext, RestProvider };\nvar _c;\n$RefreshReg$(_c, \"RestProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","RestContext","RestProvider","children","_s","restaurants","setRestaurants","displayedRestaurants","setDisplayedRestaurants","fetch","then","response","json","data","shuffled","sort","Math","random","slice","catch","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/felix/Projekte/Web-Dev/TechLabs/100-DIB/ss23-drop-in-to-berlin/dib/src/context/RestContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\n\nconst RestContext = createContext();\n\nfunction RestProvider({ children }) {\n    const [restaurants, setRestaurants] = useState([]);\n    const [displayedRestaurants, setDisplayedRestaurants] = useState([]);\n\n    useEffect(() => {\n        fetch('/database.json')\n            .then(response => response.json())\n            .then(data => {\n                setRestaurants(data);\n                const shuffled = data.sort(() => 0.5 - Math.random());\n                setDisplayedRestaurants(shuffled.slice(0, 8));\n            })\n            .catch(error => {\n                console.error(\"Error fetching data:\", error);\n            });\n    }, []);\n\n    return (\n        <RestContext.Provider value={{ restaurants, displayedRestaurants, setDisplayedRestaurants }}>\n            {children}\n        </RestContext.Provider>\n    );\n}\n\nexport { RestContext, RestProvider };"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,SAASM,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpEC,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,gBAAgB,CAAC,CAClBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVP,cAAc,CAACO,IAAI,CAAC;MACpB,MAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;MACrDT,uBAAuB,CAACM,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,WAAW;MAAEE,oBAAoB;MAAEC;IAAwB,CAAE;IAAAL,QAAA,EACvFA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACvB,EAAA,CAtBQF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAwBrB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}