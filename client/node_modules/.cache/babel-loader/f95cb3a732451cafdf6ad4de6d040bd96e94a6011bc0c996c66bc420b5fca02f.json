{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Projekte/Web-Dev/TechLabs/100-DIB/ss23-drop-in-to-berlin/dib/src/context/RestContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestContext = /*#__PURE__*/createContext();\nfunction RestProvider({\n  children\n}) {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [dataFetched, setDataFetched] = useState(false);\n  const fetchRestaurants = useCallback(async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/restaurants');\n      console.log(res);\n      setRestaurants(res.data);\n      setDataFetched(true);\n    } catch (error) {\n      console.error('Error fetching restaurants:', error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchRestaurants();\n  }, [fetchRestaurants]);\n\n  //usecallback stellt sicher, dass die funktion nicht mit jedem rerender neu zugeordnet wird.\n\n  const valuesToShare = {\n    restaurants,\n    dataFetched\n  };\n  return /*#__PURE__*/_jsxDEV(RestContext.Provider, {\n    value: valuesToShare,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(RestProvider, \"NY5LyHxYh6vp1Rz/NPqw+FleIbo=\");\n_c = RestProvider;\nexport { RestProvider };\nexport default RestContext;\nvar _c;\n$RefreshReg$(_c, \"RestProvider\");","map":{"version":3,"names":["createContext","useState","useCallback","useEffect","axios","jsxDEV","_jsxDEV","RestContext","RestProvider","children","_s","restaurants","setRestaurants","dataFetched","setDataFetched","fetchRestaurants","res","get","console","log","data","error","valuesToShare","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/felix/Projekte/Web-Dev/TechLabs/100-DIB/ss23-drop-in-to-berlin/dib/src/context/RestContext.js"],"sourcesContent":["import { createContext, useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\n\n\nconst RestContext = createContext();\n\nfunction RestProvider({ children }) {\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [dataFetched, setDataFetched] = useState(false);\n\n\n  const fetchRestaurants = useCallback(async() => {\n    try{\n    const res = await axios.get ('http://localhost:3001/restaurants')\n    console.log(res)\n    setRestaurants(res.data);\n    setDataFetched(true)\n    } catch (error) {\n      console.error('Error fetching restaurants:', error);\n  }},[])\n\n    \n    useEffect(() => {\n    fetchRestaurants();\n  }, [fetchRestaurants]);\n\n\n  //usecallback stellt sicher, dass die funktion nicht mit jedem rerender neu zugeordnet wird.\n\n\n  const valuesToShare = {\n    restaurants,\n    dataFetched\n  }\n\n  return (\n    <RestContext.Provider value={valuesToShare}>\n      {children}\n    </RestContext.Provider>\n  );\n}\n\nexport { RestProvider };\nexport default RestContext;\n\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,SAASQ,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAElC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAGrD,MAAMc,gBAAgB,GAAGb,WAAW,CAAC,YAAW;IAC9C,IAAG;MACH,MAAMc,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,mCAAmC,CAAC;MACjEC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChBJ,cAAc,CAACI,GAAG,CAACI,IAAI,CAAC;MACxBN,cAAc,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EAAC,CAAC,EAAC,EAAE,CAAC;EAGJlB,SAAS,CAAC,MAAM;IAChBY,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;;EAGtB;;EAGA,MAAMO,aAAa,GAAG;IACpBX,WAAW;IACXE;EACF,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAEF,aAAc;IAAAb,QAAA,EACxCA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAClB,EAAA,CAnCQF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAqCrB,SAASA,YAAY;AACrB,eAAeD,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}