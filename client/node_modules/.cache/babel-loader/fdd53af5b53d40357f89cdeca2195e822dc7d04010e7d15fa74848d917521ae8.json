{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Projekte/Web-Dev/TechLabs/100-DIB/ss23-drop-in-to-berlin/client/src/components/ReviewsList/ReviewsList.js\",\n  _s = $RefreshSig$();\n/* import './ReviewsList.css';\nimport { useState } from 'react';\nimport ReviewCard from '../ReviewCard/ReviewCard';\nimport UserReview from '../UserReview/UserReview';\n\nfunction ReviewList({ reviews, _id }) {\n\n  const [amountRenderedReviews, setAmountRenderedReviews] = useState(2)\n  const [isReviewSubmitted, setIsReviewSubmitted] = useState(false)\n  //submission of user review in child component, has to rerender to list, to be displayed\n  \n  const handleShowMoreReviews = () => {\n    amountRenderedReviews != 2 ? setAmountRenderedReviews(2) : setAmountRenderedReviews(reviews.length)\n  }\n\n  if (!reviews || reviews.length === 0) {\n    return <div>No reviews available.</div>;\n  }\n\n\n  const renderedReviews = reviews\n    .slice(0, amountRenderedReviews)\n    .map((review, index) => (\n      <ReviewCard review={review} key={index} _id={_id}></ReviewCard>\n    ));\n  console.log('review list before return');\n  return (\n    <div className='reviews-section'>\n      <div className='rendered-reviews'>{renderedReviews}</div>\n      <button onClick={handleShowMoreReviews}>{amountRenderedReviews === 2 ? 'Show more Reviews' : 'Show less reviews'}</button>\n      <UserReview _id={_id} isReviewSubmitted={isReviewSubmitted} setIsReviewSubmitted={setIsReviewSubmitted}/>\n    </div>\n  );\n}\n\nexport default ReviewList;\n */\n\nimport React, { useState, useEffect } from 'react';\nimport ReviewCard from '../ReviewCard/ReviewCard';\nimport UserReview from '../UserReview/UserReview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewList({\n  reviews,\n  _id\n}) {\n  _s();\n  const [amountRenderedReviews, setAmountRenderedReviews] = useState(2);\n  const [isReviewSubmitted, setIsReviewSubmitted] = useState(false);\n  const [renderedReviewCards, setRenderedReviewCards] = useState([]);\n  useEffect(() => {\n    // Calculate the renderedReviewCards when reviews or amountRenderedReviews change\n    const slicedReviews = reviews.slice(0, amountRenderedReviews);\n    const renderedReviews = slicedReviews.map((review, index) => /*#__PURE__*/_jsxDEV(ReviewCard, {\n      review: review,\n      _id: _id\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this));\n    setRenderedReviewCards(renderedReviews);\n  }, [reviews, amountRenderedReviews, _id]);\n  const handleShowMoreReviews = () => {\n    setAmountRenderedReviews(amountRenderedReviews === 2 ? reviews.length : 2);\n  };\n  if (!reviews || reviews.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No reviews available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reviews-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rendered-reviews\",\n      children: renderedReviewCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShowMoreReviews,\n      children: amountRenderedReviews === 2 ? 'Show more Reviews' : 'Show less reviews'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserReview, {\n      _id: _id,\n      isReviewSubmitted: isReviewSubmitted,\n      setIsReviewSubmitted: setIsReviewSubmitted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewList, \"d36ReMAVISStt3F5K5zeqOKg6H0=\");\n_c = ReviewList;\nexport default ReviewList;\nvar _c;\n$RefreshReg$(_c, \"ReviewList\");","map":{"version":3,"names":["React","useState","useEffect","ReviewCard","UserReview","jsxDEV","_jsxDEV","ReviewList","reviews","_id","_s","amountRenderedReviews","setAmountRenderedReviews","isReviewSubmitted","setIsReviewSubmitted","renderedReviewCards","setRenderedReviewCards","slicedReviews","slice","renderedReviews","map","review","index","fileName","_jsxFileName","lineNumber","columnNumber","handleShowMoreReviews","length","children","className","onClick","_c","$RefreshReg$"],"sources":["/Users/felix/Projekte/Web-Dev/TechLabs/100-DIB/ss23-drop-in-to-berlin/client/src/components/ReviewsList/ReviewsList.js"],"sourcesContent":["/* import './ReviewsList.css';\nimport { useState } from 'react';\nimport ReviewCard from '../ReviewCard/ReviewCard';\nimport UserReview from '../UserReview/UserReview';\n\nfunction ReviewList({ reviews, _id }) {\n\n  const [amountRenderedReviews, setAmountRenderedReviews] = useState(2)\n  const [isReviewSubmitted, setIsReviewSubmitted] = useState(false)\n  //submission of user review in child component, has to rerender to list, to be displayed\n  \n  const handleShowMoreReviews = () => {\n    amountRenderedReviews != 2 ? setAmountRenderedReviews(2) : setAmountRenderedReviews(reviews.length)\n  }\n\n  if (!reviews || reviews.length === 0) {\n    return <div>No reviews available.</div>;\n  }\n\n\n  const renderedReviews = reviews\n    .slice(0, amountRenderedReviews)\n    .map((review, index) => (\n      <ReviewCard review={review} key={index} _id={_id}></ReviewCard>\n    ));\n  console.log('review list before return');\n  return (\n    <div className='reviews-section'>\n      <div className='rendered-reviews'>{renderedReviews}</div>\n      <button onClick={handleShowMoreReviews}>{amountRenderedReviews === 2 ? 'Show more Reviews' : 'Show less reviews'}</button>\n      <UserReview _id={_id} isReviewSubmitted={isReviewSubmitted} setIsReviewSubmitted={setIsReviewSubmitted}/>\n    </div>\n  );\n}\n\nexport default ReviewList;\n */\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport ReviewCard from '../ReviewCard/ReviewCard';\nimport UserReview from '../UserReview/UserReview';\n\nfunction ReviewList({ reviews, _id }) {\n  const [amountRenderedReviews, setAmountRenderedReviews] = useState(2);\n  const [isReviewSubmitted, setIsReviewSubmitted] = useState(false);\n  const [renderedReviewCards, setRenderedReviewCards] = useState([]);\n\n  useEffect(() => {\n    // Calculate the renderedReviewCards when reviews or amountRenderedReviews change\n    const slicedReviews = reviews.slice(0, amountRenderedReviews);\n    const renderedReviews = slicedReviews.map((review, index) => (\n      <ReviewCard review={review} key={index} _id={_id}></ReviewCard>\n    ));\n    setRenderedReviewCards(renderedReviews);\n  }, [reviews, amountRenderedReviews, _id]);\n\n  const handleShowMoreReviews = () => {\n    setAmountRenderedReviews(amountRenderedReviews === 2 ? reviews.length : 2);\n  };\n\n  if (!reviews || reviews.length === 0) {\n    return <div>No reviews available.</div>;\n  }\n\n  return (\n    <div className='reviews-section'>\n      <div className='rendered-reviews'>{renderedReviewCards}</div>\n      <button onClick={handleShowMoreReviews}>\n        {amountRenderedReviews === 2 ? 'Show more Reviews' : 'Show less reviews'}\n      </button>\n      <UserReview _id={_id} isReviewSubmitted={isReviewSubmitted} setIsReviewSubmitted={setIsReviewSubmitted}/>\n    </div>\n  );\n}\n\nexport default ReviewList;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAC;EAAEC,OAAO;EAAEC;AAAI,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrE,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACc,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElEC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,aAAa,GAAGT,OAAO,CAACU,KAAK,CAAC,CAAC,EAAEP,qBAAqB,CAAC;IAC7D,MAAMQ,eAAe,GAAGF,aAAa,CAACG,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACtDhB,OAAA,CAACH,UAAU;MAACkB,MAAM,EAAEA,MAAO;MAAaZ,GAAG,EAAEA;IAAI,GAAhBa,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwB,CAC/D,CAAC;IACFV,sBAAsB,CAACG,eAAe,CAAC;EACzC,CAAC,EAAE,CAACX,OAAO,EAAEG,qBAAqB,EAAEF,GAAG,CAAC,CAAC;EAEzC,MAAMkB,qBAAqB,GAAGA,CAAA,KAAM;IAClCf,wBAAwB,CAACD,qBAAqB,KAAK,CAAC,GAAGH,OAAO,CAACoB,MAAM,GAAG,CAAC,CAAC;EAC5E,CAAC;EAED,IAAI,CAACpB,OAAO,IAAIA,OAAO,CAACoB,MAAM,KAAK,CAAC,EAAE;IACpC,oBAAOtB,OAAA;MAAAuB,QAAA,EAAK;IAAqB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EAEA,oBACEpB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAD,QAAA,gBAC9BvB,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAEd;IAAmB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7DpB,OAAA;MAAQyB,OAAO,EAAEJ,qBAAsB;MAAAE,QAAA,EACpClB,qBAAqB,KAAK,CAAC,GAAG,mBAAmB,GAAG;IAAmB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACTpB,OAAA,CAACF,UAAU;MAACK,GAAG,EAAEA,GAAI;MAACI,iBAAiB,EAAEA,iBAAkB;MAACC,oBAAoB,EAAEA;IAAqB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtG,CAAC;AAEV;AAAChB,EAAA,CA/BQH,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAiCnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}